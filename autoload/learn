# -*- mode: sh -*-
# vim: set ft=sh:
function learn(){

    local mywords learning

    if [[ ! -z "$BUFFER" ]]; then

        mywords=("${(z)BUFFER}")
        if [[ "${mywords[1]}" == le ]];then
            printf "\x1b[0;1;31m"
            zle -R "Zsh-Learn ERROR: First word cannot be 'le'." && read -k 1
            printf "\x1b[0m"
            return 1
        fi

        if [[ "$BUFFER" =~ "echo 'update[[:space:]]+.*set[[:space:]]+" ]];then
            printf "\x1b[0;1;31m"
            zle -R "Zsh-Learn ERROR: Cannot duplicate learning echo 'update ... set...'." && read -k 1
            printf "\x1b[0m"
            return 1
        fi

        learning="$(print -- "$BUFFER" | perl -pe 's@\x0a@\x20@' | perl -pe 's@^\x20+|\x20+$@@g;s@\x20+@\x20@g')"

        BUFFER="le '${learning//'/\''}'"

        if [[ $ZPWR_SEND_KEYS_FULL == false ]]; then
            type -- "keyClear" &>/dev/null && keyClear
            zle .accept-line
        fi
    else
        printf "\x1b[0;1;31m"
        zle -R "Zsh-Learn ERROR: Cannot learn empty BUFFER." && read -k 1
        printf "\x1b[0m"
        return 1
    fi
}

learn "$@"
